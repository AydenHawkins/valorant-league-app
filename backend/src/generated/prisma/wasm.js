
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AgentScalarFieldEnum = {
  id: 'id',
  name: 'name',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MapScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LeagueScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SeasonScalarFieldEnum = {
  id: 'id',
  leagueId: 'leagueId',
  name: 'name',
  startDate: 'startDate',
  endDate: 'endDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TeamScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PlayerScalarFieldEnum = {
  id: 'id',
  name: 'name',
  tag: 'tag',
  puuid: 'puuid',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SeriesScalarFieldEnum = {
  id: 'id',
  seasonId: 'seasonId',
  redTeamId: 'redTeamId',
  blueTeamId: 'blueTeamId',
  bestOf: 'bestOf',
  winnerTeamId: 'winnerTeamId',
  status: 'status',
  startDate: 'startDate',
  endDate: 'endDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MatchScalarFieldEnum = {
  id: 'id',
  seriesId: 'seriesId',
  matchNumber: 'matchNumber',
  riotMatchId: 'riotMatchId',
  mapId: 'mapId',
  gameLengthMs: 'gameLengthMs',
  startedAt: 'startedAt',
  completedAt: 'completedAt',
  isCompleted: 'isCompleted',
  status: 'status',
  winnerTeamSide: 'winnerTeamSide',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MatchParticipationScalarFieldEnum = {
  id: 'id',
  matchId: 'matchId',
  playerId: 'playerId',
  teamId: 'teamId',
  teamSide: 'teamSide',
  agentId: 'agentId',
  createdAt: 'createdAt'
};

exports.Prisma.MatchPlayerStatsScalarFieldEnum = {
  id: 'id',
  matchParticipationId: 'matchParticipationId',
  matchId: 'matchId',
  playerId: 'playerId',
  agentId: 'agentId',
  agentName: 'agentName',
  score: 'score',
  kills: 'kills',
  deaths: 'deaths',
  assists: 'assists',
  headshots: 'headshots',
  bodyshots: 'bodyshots',
  legshots: 'legshots',
  damageDealt: 'damageDealt',
  damageReceived: 'damageReceived',
  adr: 'adr',
  acs: 'acs',
  kd: 'kd',
  hsPercent: 'hsPercent',
  kast: 'kast',
  firstKills: 'firstKills',
  firstDeaths: 'firstDeaths',
  grenadeCasts: 'grenadeCasts',
  ability1Casts: 'ability1Casts',
  ability2Casts: 'ability2Casts',
  ultimateCasts: 'ultimateCasts',
  spentOverall: 'spentOverall',
  spentAverage: 'spentAverage',
  loadoutOverall: 'loadoutOverall',
  loadoutAverage: 'loadoutAverage',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MatchTeamStatsScalarFieldEnum = {
  id: 'id',
  matchId: 'matchId',
  teamId: 'teamId',
  teamSide: 'teamSide',
  roundsWon: 'roundsWon',
  roundsLost: 'roundsLost',
  won: 'won',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RoundScalarFieldEnum = {
  id: 'id',
  matchId: 'matchId',
  roundNumber: 'roundNumber',
  result: 'result',
  ceremony: 'ceremony',
  winningTeam: 'winningTeam',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PlantScalarFieldEnum = {
  id: 'id',
  roundId: 'roundId',
  playerId: 'playerId',
  roundTimeMs: 'roundTimeMs',
  site: 'site',
  locationX: 'locationX',
  locationY: 'locationY'
};

exports.Prisma.DefuseScalarFieldEnum = {
  id: 'id',
  roundId: 'roundId',
  playerId: 'playerId',
  roundTimeMs: 'roundTimeMs',
  locationX: 'locationX',
  locationY: 'locationY'
};

exports.Prisma.RoundPlayerStatsScalarFieldEnum = {
  id: 'id',
  roundId: 'roundId',
  matchParticipationId: 'matchParticipationId',
  playerId: 'playerId',
  score: 'score',
  kills: 'kills',
  headshots: 'headshots',
  bodyshots: 'bodyshots',
  legshots: 'legshots',
  grenadeCasts: 'grenadeCasts',
  ability1Casts: 'ability1Casts',
  ability2Casts: 'ability2Casts',
  ultimateCasts: 'ultimateCasts',
  loadoutValue: 'loadoutValue',
  creditsRemaining: 'creditsRemaining',
  weaponId: 'weaponId',
  weaponName: 'weaponName',
  armorId: 'armorId',
  armorName: 'armorName',
  createdAt: 'createdAt'
};

exports.Prisma.RoundTeamStatsScalarFieldEnum = {
  id: 'id',
  roundId: 'roundId',
  teamId: 'teamId',
  teamSide: 'teamSide',
  won: 'won'
};

exports.Prisma.KillScalarFieldEnum = {
  id: 'id',
  matchId: 'matchId',
  roundNumber: 'roundNumber',
  timeInRoundMs: 'timeInRoundMs',
  timeInMatchMs: 'timeInMatchMs',
  killerId: 'killerId',
  victimId: 'victimId',
  locationX: 'locationX',
  locationY: 'locationY',
  weaponId: 'weaponId',
  weaponName: 'weaponName',
  weaponType: 'weaponType',
  secondaryFireMode: 'secondaryFireMode',
  createdAt: 'createdAt'
};

exports.Prisma.TeamRosterScalarFieldEnum = {
  id: 'id',
  teamId: 'teamId',
  playerId: 'playerId',
  seasonId: 'seasonId',
  startDate: 'startDate',
  endDate: 'endDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SubstitutionScalarFieldEnum = {
  id: 'id',
  matchId: 'matchId',
  teamId: 'teamId',
  substitutedInId: 'substitutedInId',
  substitutedOutId: 'substitutedOutId',
  timestamp: 'timestamp'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Agent: 'Agent',
  Map: 'Map',
  League: 'League',
  Season: 'Season',
  Team: 'Team',
  Player: 'Player',
  Series: 'Series',
  Match: 'Match',
  MatchParticipation: 'MatchParticipation',
  MatchPlayerStats: 'MatchPlayerStats',
  MatchTeamStats: 'MatchTeamStats',
  Round: 'Round',
  Plant: 'Plant',
  Defuse: 'Defuse',
  RoundPlayerStats: 'RoundPlayerStats',
  RoundTeamStats: 'RoundTeamStats',
  Kill: 'Kill',
  TeamRoster: 'TeamRoster',
  Substitution: 'Substitution'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/aydenhawkins/development/valorant-league-app/backend/src/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/aydenhawkins/development/valorant-league-app/backend/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../../.env",
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n//\n// ==================== REFERENCE DATA ====================\n//\n\nmodel Agent {\n  id   String @id\n  name String @unique\n  role String\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  matchParticipations MatchParticipation[]\n  matchPlayerStats    MatchPlayerStats[]\n\n  @@index([role])\n}\n\nmodel Map {\n  id   String @id\n  name String @unique\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  matches Match[]\n\n  @@index([name])\n}\n\n//\n// ==================== CALCULATED STATS FORMULAS ====================\n//\n// These formulas should be used when parsing match data and storing stats:\n//\n// ADR (Average Damage per Round) = damageDealt / roundsPlayed\n// ACS (Average Combat Score) = score / roundsPlayed\n// K/D Ratio = kills / deaths (or kills if deaths = 0)\n// HS% (Headshot Percentage) = headshots / (headshots + bodyshots + legshots) * 100\n// KAST (Kill, Assist, Survive, Trade %) = (rounds with K or A or survived or traded) / roundsPlayed * 100\n//\n// Note: KAST requires round-by-round analysis to determine if player survived or was traded\n// Note: First Kills/Deaths need to be derived from Kill events (first kill of each round)\n//\n\n//\n// ==================== CORE ENTITIES ====================\n//\n\nmodel League {\n  id   Int    @id @default(autoincrement())\n  name String @unique\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  seasons Season[]\n\n  @@index([name])\n}\n\nmodel Season {\n  id        Int       @id @default(autoincrement())\n  leagueId  Int\n  league    League    @relation(fields: [leagueId], references: [id])\n  name      String\n  startDate DateTime\n  endDate   DateTime?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  series      Series[]\n  teamRosters TeamRoster[]\n\n  @@unique([leagueId, name])\n  @@index([startDate])\n  @@index([leagueId])\n}\n\nmodel Team {\n  id   Int    @id @default(autoincrement())\n  name String @unique\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  rosters             TeamRoster[]\n  redSeries           Series[]             @relation(\"RedTeam\")\n  blueSeries          Series[]             @relation(\"BlueTeam\")\n  teamStats           MatchTeamStats[]\n  substitutions       Substitution[]\n  roundStats          RoundTeamStats[]\n  matchParticipations MatchParticipation[]\n\n  @@index([name])\n}\n\nmodel Player {\n  id    Int    @id @default(autoincrement())\n  name  String\n  tag   String\n  puuid String @unique\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  rosters             TeamRoster[]\n  subIns              Substitution[]       @relation(\"SubIn\")\n  subOuts             Substitution[]       @relation(\"SubOut\")\n  plants              Plant[]\n  defuses             Defuse[]\n  roundStats          RoundPlayerStats[]\n  matchStats          MatchPlayerStats[]\n  kills               Kill[]               @relation(\"Killer\")\n  deaths              Kill[]               @relation(\"Victim\")\n  killAssists         Kill[]               @relation(\"Assistant\")\n  matchParticipations MatchParticipation[]\n\n  @@unique([name, tag])\n  @@index([puuid])\n  @@index([name, tag])\n}\n\n//\n// ==================== MATCH STRUCTURE ====================\n//\n\n// A Series is a Bo1, Bo3, Bo5, etc. between two teams\nmodel Series {\n  id       Int    @id @default(autoincrement())\n  seasonId Int\n  season   Season @relation(fields: [seasonId], references: [id])\n\n  redTeamId Int\n  redTeam   Team @relation(\"RedTeam\", fields: [redTeamId], references: [id])\n\n  blueTeamId Int\n  blueTeam   Team @relation(\"BlueTeam\", fields: [blueTeamId], references: [id])\n\n  bestOf       Int\n  winnerTeamId Int?\n\n  status String @default(\"scheduled\") // \"scheduled\", \"ongoing\", \"completed\", \"forfeit\", \"cancelled\"\n\n  startDate DateTime\n  endDate   DateTime?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  matches Match[]\n\n  @@index([seasonId])\n  @@index([redTeamId])\n  @@index([blueTeamId])\n  @@index([startDate])\n  @@index([status])\n}\n\n// A Match is a single game/map within a series\nmodel Match {\n  id       Int    @id @default(autoincrement())\n  seriesId Int\n  series   Series @relation(fields: [seriesId], references: [id])\n\n  matchNumber Int\n  riotMatchId String? @unique\n\n  mapId String?\n  map   Map?    @relation(fields: [mapId], references: [id])\n\n  gameLengthMs Int?\n  startedAt    DateTime\n  completedAt  DateTime?\n  isCompleted  Boolean   @default(false)\n\n  status String @default(\"scheduled\") // \"scheduled\", \"ongoing\", \"completed\", \"forfeit\", \"cancelled\"\n\n  winnerTeamSide String?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  rounds           Round[]\n  matchPlayerStats MatchPlayerStats[]\n  matchTeamStats   MatchTeamStats[]\n  substitutions    Substitution[]\n  kills            Kill[]\n  participations   MatchParticipation[]\n\n  @@unique([seriesId, matchNumber])\n  @@index([seriesId])\n  @@index([mapId])\n  @@index([startedAt])\n  @@index([riotMatchId])\n  @@index([status])\n}\n\n// Track which players actually played in which matches (handles substitutions)\nmodel MatchParticipation {\n  id      Int   @id @default(autoincrement())\n  matchId Int\n  match   Match @relation(fields: [matchId], references: [id], onDelete: Cascade)\n\n  playerId Int\n  player   Player @relation(fields: [playerId], references: [id])\n\n  teamId Int\n  team   Team @relation(fields: [teamId], references: [id])\n\n  teamSide String\n\n  agentId String?\n  agent   Agent?  @relation(fields: [agentId], references: [id])\n\n  createdAt DateTime @default(now())\n\n  matchStats MatchPlayerStats?\n  roundStats RoundPlayerStats[]\n\n  @@unique([matchId, playerId])\n  @@index([matchId])\n  @@index([playerId])\n  @@index([teamId])\n  @@index([agentId])\n}\n\n//\n// ==================== MATCH-LEVEL STATS ====================\n//\n\nmodel MatchPlayerStats {\n  id                   Int                @id @default(autoincrement())\n  matchParticipationId Int                @unique\n  matchParticipation   MatchParticipation @relation(fields: [matchParticipationId], references: [id], onDelete: Cascade)\n\n  matchId Int\n  match   Match @relation(fields: [matchId], references: [id], onDelete: Cascade)\n\n  playerId Int\n  player   Player @relation(fields: [playerId], references: [id])\n\n  agentId   String?\n  agentName String?\n\n  // Combat stats\n  score     Int\n  kills     Int\n  deaths    Int\n  assists   Int\n  headshots Int\n  bodyshots Int\n  legshots  Int\n\n  // Damage\n  damageDealt    Int\n  damageReceived Int\n\n  // Calculated Stats (derived from raw data)\n  // ADR = Average Damage per Round = damageDealt / rounds played\n  adr         Float?\n  // ACS = Average Combat Score per Round = score / rounds played  \n  acs         Float?\n  // K/D Ratio = kills / deaths (or kills if deaths = 0)\n  kd          Float?\n  // HS% = Headshot Percentage = headshots / (headshots + bodyshots + legshots)\n  hsPercent   Float?\n  // KAST = Kill/Assist/Survive/Trade percentage (% of rounds with K, A, S, or T)\n  kast        Float?\n  // First Kills - First Deaths\n  firstKills  Int?\n  firstDeaths Int?\n\n  // Ability usage\n  grenadeCasts  Int?\n  ability1Casts Int?\n  ability2Casts Int?\n  ultimateCasts Int?\n\n  // Economy\n  spentOverall   Int?\n  spentAverage   Float?\n  loadoutOverall Int?\n  loadoutAverage Float?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  Agent     Agent?   @relation(fields: [agentId], references: [id])\n\n  @@index([matchId])\n  @@index([playerId])\n}\n\nmodel MatchTeamStats {\n  id      Int   @id @default(autoincrement())\n  matchId Int\n  match   Match @relation(fields: [matchId], references: [id], onDelete: Cascade)\n\n  teamId Int\n  team   Team @relation(fields: [teamId], references: [id])\n\n  teamSide String\n\n  roundsWon  Int\n  roundsLost Int\n  won        Boolean\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([matchId, teamId])\n  @@index([matchId])\n  @@index([teamId])\n}\n\n//\n// ==================== ROUND-LEVEL DATA ====================\n//\n\nmodel Round {\n  id      Int   @id @default(autoincrement())\n  matchId Int\n  match   Match @relation(fields: [matchId], references: [id], onDelete: Cascade)\n\n  roundNumber Int\n  result      String\n  ceremony    String?\n  winningTeam String\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  plant       Plant?\n  defuse      Defuse?\n  playerStats RoundPlayerStats[]\n  teamStats   RoundTeamStats[]\n\n  @@unique([matchId, roundNumber])\n  @@index([matchId])\n  @@index([winningTeam])\n}\n\nmodel Plant {\n  id      Int   @id @default(autoincrement())\n  roundId Int   @unique\n  round   Round @relation(fields: [roundId], references: [id], onDelete: Cascade)\n\n  playerId Int\n  player   Player @relation(fields: [playerId], references: [id])\n\n  roundTimeMs Int\n  site        String\n  locationX   Float?\n  locationY   Float?\n\n  @@index([playerId])\n  @@index([site])\n}\n\nmodel Defuse {\n  id      Int   @id @default(autoincrement())\n  roundId Int   @unique\n  round   Round @relation(fields: [roundId], references: [id], onDelete: Cascade)\n\n  playerId Int\n  player   Player @relation(fields: [playerId], references: [id])\n\n  roundTimeMs Int\n  locationX   Float?\n  locationY   Float?\n\n  @@index([playerId])\n}\n\nmodel RoundPlayerStats {\n  id      Int   @id @default(autoincrement())\n  roundId Int\n  round   Round @relation(fields: [roundId], references: [id], onDelete: Cascade)\n\n  matchParticipationId Int\n  matchParticipation   MatchParticipation @relation(fields: [matchParticipationId], references: [id], onDelete: Cascade)\n\n  playerId  Int\n  player    Player @relation(fields: [playerId], references: [id])\n  // Combat stats for this round\n  score     Int\n  kills     Int\n  headshots Int\n  bodyshots Int\n  legshots  Int\n\n  // Ability usage this round\n  grenadeCasts  Int?\n  ability1Casts Int?\n  ability2Casts Int?\n  ultimateCasts Int?\n\n  // Economy\n  loadoutValue     Int?\n  creditsRemaining Int?\n  weaponId         String?\n  weaponName       String?\n  armorId          String?\n  armorName        String?\n\n  createdAt DateTime @default(now())\n\n  @@unique([roundId, matchParticipationId])\n  @@index([roundId])\n  @@index([playerId])\n  @@index([matchParticipationId])\n}\n\nmodel RoundTeamStats {\n  id      Int   @id @default(autoincrement())\n  roundId Int\n  round   Round @relation(fields: [roundId], references: [id], onDelete: Cascade)\n\n  teamId Int\n  team   Team @relation(fields: [teamId], references: [id])\n\n  teamSide String\n  won      Boolean\n\n  @@unique([roundId, teamId])\n  @@index([roundId])\n  @@index([teamId])\n}\n\n//\n// ==================== KILL EVENTS ====================\n//\n\nmodel Kill {\n  id      Int   @id @default(autoincrement())\n  matchId Int\n  match   Match @relation(fields: [matchId], references: [id], onDelete: Cascade)\n\n  roundNumber   Int\n  timeInRoundMs Int\n  timeInMatchMs Int\n\n  killerId Int\n  killer   Player @relation(\"Killer\", fields: [killerId], references: [id])\n\n  victimId Int\n  victim   Player @relation(\"Victim\", fields: [victimId], references: [id])\n\n  assistants Player[] @relation(\"Assistant\")\n\n  locationX Float?\n  locationY Float?\n\n  weaponId          String?\n  weaponName        String?\n  weaponType        String?\n  secondaryFireMode Boolean @default(false)\n\n  createdAt DateTime @default(now())\n\n  @@index([matchId])\n  @@index([killerId])\n  @@index([victimId])\n  @@index([roundNumber])\n}\n\n//\n// ==================== ROSTERS & SUBSTITUTIONS ====================\n//\n\nmodel TeamRoster {\n  id     Int  @id @default(autoincrement())\n  teamId Int\n  team   Team @relation(fields: [teamId], references: [id])\n\n  playerId Int\n  player   Player @relation(fields: [playerId], references: [id])\n\n  seasonId Int\n  season   Season @relation(fields: [seasonId], references: [id])\n\n  startDate DateTime  @default(now())\n  endDate   DateTime?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([playerId, teamId, seasonId])\n  @@index([teamId])\n  @@index([playerId])\n  @@index([seasonId])\n}\n\nmodel Substitution {\n  id      Int   @id @default(autoincrement())\n  matchId Int\n  match   Match @relation(fields: [matchId], references: [id], onDelete: Cascade)\n\n  teamId Int\n  team   Team @relation(fields: [teamId], references: [id])\n\n  substitutedInId Int\n  substitutedIn   Player @relation(\"SubIn\", fields: [substitutedInId], references: [id])\n\n  substitutedOutId Int\n  substitutedOut   Player @relation(\"SubOut\", fields: [substitutedOutId], references: [id])\n\n  timestamp DateTime @default(now())\n\n  @@index([matchId])\n  @@index([teamId])\n  @@index([substitutedInId])\n  @@index([substitutedOutId])\n}\n",
  "inlineSchemaHash": "48f3c56b7561b8689f2d4cbac6ebbdc84d5720d071cf030c57ee7cfb8a8eb8e4",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Agent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"matchParticipations\",\"kind\":\"object\",\"type\":\"MatchParticipation\",\"relationName\":\"AgentToMatchParticipation\"},{\"name\":\"matchPlayerStats\",\"kind\":\"object\",\"type\":\"MatchPlayerStats\",\"relationName\":\"AgentToMatchPlayerStats\"}],\"dbName\":null},\"Map\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"matches\",\"kind\":\"object\",\"type\":\"Match\",\"relationName\":\"MapToMatch\"}],\"dbName\":null},\"League\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"seasons\",\"kind\":\"object\",\"type\":\"Season\",\"relationName\":\"LeagueToSeason\"}],\"dbName\":null},\"Season\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"leagueId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"league\",\"kind\":\"object\",\"type\":\"League\",\"relationName\":\"LeagueToSeason\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"series\",\"kind\":\"object\",\"type\":\"Series\",\"relationName\":\"SeasonToSeries\"},{\"name\":\"teamRosters\",\"kind\":\"object\",\"type\":\"TeamRoster\",\"relationName\":\"SeasonToTeamRoster\"}],\"dbName\":null},\"Team\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rosters\",\"kind\":\"object\",\"type\":\"TeamRoster\",\"relationName\":\"TeamToTeamRoster\"},{\"name\":\"redSeries\",\"kind\":\"object\",\"type\":\"Series\",\"relationName\":\"RedTeam\"},{\"name\":\"blueSeries\",\"kind\":\"object\",\"type\":\"Series\",\"relationName\":\"BlueTeam\"},{\"name\":\"teamStats\",\"kind\":\"object\",\"type\":\"MatchTeamStats\",\"relationName\":\"MatchTeamStatsToTeam\"},{\"name\":\"substitutions\",\"kind\":\"object\",\"type\":\"Substitution\",\"relationName\":\"SubstitutionToTeam\"},{\"name\":\"roundStats\",\"kind\":\"object\",\"type\":\"RoundTeamStats\",\"relationName\":\"RoundTeamStatsToTeam\"},{\"name\":\"matchParticipations\",\"kind\":\"object\",\"type\":\"MatchParticipation\",\"relationName\":\"MatchParticipationToTeam\"}],\"dbName\":null},\"Player\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tag\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"puuid\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rosters\",\"kind\":\"object\",\"type\":\"TeamRoster\",\"relationName\":\"PlayerToTeamRoster\"},{\"name\":\"subIns\",\"kind\":\"object\",\"type\":\"Substitution\",\"relationName\":\"SubIn\"},{\"name\":\"subOuts\",\"kind\":\"object\",\"type\":\"Substitution\",\"relationName\":\"SubOut\"},{\"name\":\"plants\",\"kind\":\"object\",\"type\":\"Plant\",\"relationName\":\"PlantToPlayer\"},{\"name\":\"defuses\",\"kind\":\"object\",\"type\":\"Defuse\",\"relationName\":\"DefuseToPlayer\"},{\"name\":\"roundStats\",\"kind\":\"object\",\"type\":\"RoundPlayerStats\",\"relationName\":\"PlayerToRoundPlayerStats\"},{\"name\":\"matchStats\",\"kind\":\"object\",\"type\":\"MatchPlayerStats\",\"relationName\":\"MatchPlayerStatsToPlayer\"},{\"name\":\"kills\",\"kind\":\"object\",\"type\":\"Kill\",\"relationName\":\"Killer\"},{\"name\":\"deaths\",\"kind\":\"object\",\"type\":\"Kill\",\"relationName\":\"Victim\"},{\"name\":\"killAssists\",\"kind\":\"object\",\"type\":\"Kill\",\"relationName\":\"Assistant\"},{\"name\":\"matchParticipations\",\"kind\":\"object\",\"type\":\"MatchParticipation\",\"relationName\":\"MatchParticipationToPlayer\"}],\"dbName\":null},\"Series\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"seasonId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"season\",\"kind\":\"object\",\"type\":\"Season\",\"relationName\":\"SeasonToSeries\"},{\"name\":\"redTeamId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"redTeam\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"RedTeam\"},{\"name\":\"blueTeamId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"blueTeam\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"BlueTeam\"},{\"name\":\"bestOf\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"winnerTeamId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"matches\",\"kind\":\"object\",\"type\":\"Match\",\"relationName\":\"MatchToSeries\"}],\"dbName\":null},\"Match\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"seriesId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"series\",\"kind\":\"object\",\"type\":\"Series\",\"relationName\":\"MatchToSeries\"},{\"name\":\"matchNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"riotMatchId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mapId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"map\",\"kind\":\"object\",\"type\":\"Map\",\"relationName\":\"MapToMatch\"},{\"name\":\"gameLengthMs\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isCompleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"winnerTeamSide\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rounds\",\"kind\":\"object\",\"type\":\"Round\",\"relationName\":\"MatchToRound\"},{\"name\":\"matchPlayerStats\",\"kind\":\"object\",\"type\":\"MatchPlayerStats\",\"relationName\":\"MatchToMatchPlayerStats\"},{\"name\":\"matchTeamStats\",\"kind\":\"object\",\"type\":\"MatchTeamStats\",\"relationName\":\"MatchToMatchTeamStats\"},{\"name\":\"substitutions\",\"kind\":\"object\",\"type\":\"Substitution\",\"relationName\":\"MatchToSubstitution\"},{\"name\":\"kills\",\"kind\":\"object\",\"type\":\"Kill\",\"relationName\":\"KillToMatch\"},{\"name\":\"participations\",\"kind\":\"object\",\"type\":\"MatchParticipation\",\"relationName\":\"MatchToMatchParticipation\"}],\"dbName\":null},\"MatchParticipation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"matchId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"match\",\"kind\":\"object\",\"type\":\"Match\",\"relationName\":\"MatchToMatchParticipation\"},{\"name\":\"playerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"player\",\"kind\":\"object\",\"type\":\"Player\",\"relationName\":\"MatchParticipationToPlayer\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"MatchParticipationToTeam\"},{\"name\":\"teamSide\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agent\",\"kind\":\"object\",\"type\":\"Agent\",\"relationName\":\"AgentToMatchParticipation\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"matchStats\",\"kind\":\"object\",\"type\":\"MatchPlayerStats\",\"relationName\":\"MatchParticipationToMatchPlayerStats\"},{\"name\":\"roundStats\",\"kind\":\"object\",\"type\":\"RoundPlayerStats\",\"relationName\":\"MatchParticipationToRoundPlayerStats\"}],\"dbName\":null},\"MatchPlayerStats\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"matchParticipationId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"matchParticipation\",\"kind\":\"object\",\"type\":\"MatchParticipation\",\"relationName\":\"MatchParticipationToMatchPlayerStats\"},{\"name\":\"matchId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"match\",\"kind\":\"object\",\"type\":\"Match\",\"relationName\":\"MatchToMatchPlayerStats\"},{\"name\":\"playerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"player\",\"kind\":\"object\",\"type\":\"Player\",\"relationName\":\"MatchPlayerStatsToPlayer\"},{\"name\":\"agentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agentName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"kills\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"deaths\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"assists\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"headshots\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bodyshots\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"legshots\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"damageDealt\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"damageReceived\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"adr\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"acs\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"kd\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"hsPercent\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"kast\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"firstKills\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"firstDeaths\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"grenadeCasts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ability1Casts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ability2Casts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ultimateCasts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"spentOverall\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"spentAverage\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"loadoutOverall\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"loadoutAverage\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Agent\",\"kind\":\"object\",\"type\":\"Agent\",\"relationName\":\"AgentToMatchPlayerStats\"}],\"dbName\":null},\"MatchTeamStats\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"matchId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"match\",\"kind\":\"object\",\"type\":\"Match\",\"relationName\":\"MatchToMatchTeamStats\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"MatchTeamStatsToTeam\"},{\"name\":\"teamSide\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roundsWon\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"roundsLost\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"won\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Round\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"matchId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"match\",\"kind\":\"object\",\"type\":\"Match\",\"relationName\":\"MatchToRound\"},{\"name\":\"roundNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"result\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ceremony\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"winningTeam\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"plant\",\"kind\":\"object\",\"type\":\"Plant\",\"relationName\":\"PlantToRound\"},{\"name\":\"defuse\",\"kind\":\"object\",\"type\":\"Defuse\",\"relationName\":\"DefuseToRound\"},{\"name\":\"playerStats\",\"kind\":\"object\",\"type\":\"RoundPlayerStats\",\"relationName\":\"RoundToRoundPlayerStats\"},{\"name\":\"teamStats\",\"kind\":\"object\",\"type\":\"RoundTeamStats\",\"relationName\":\"RoundToRoundTeamStats\"}],\"dbName\":null},\"Plant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"roundId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"round\",\"kind\":\"object\",\"type\":\"Round\",\"relationName\":\"PlantToRound\"},{\"name\":\"playerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"player\",\"kind\":\"object\",\"type\":\"Player\",\"relationName\":\"PlantToPlayer\"},{\"name\":\"roundTimeMs\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"site\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"locationX\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"locationY\",\"kind\":\"scalar\",\"type\":\"Float\"}],\"dbName\":null},\"Defuse\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"roundId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"round\",\"kind\":\"object\",\"type\":\"Round\",\"relationName\":\"DefuseToRound\"},{\"name\":\"playerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"player\",\"kind\":\"object\",\"type\":\"Player\",\"relationName\":\"DefuseToPlayer\"},{\"name\":\"roundTimeMs\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"locationX\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"locationY\",\"kind\":\"scalar\",\"type\":\"Float\"}],\"dbName\":null},\"RoundPlayerStats\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"roundId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"round\",\"kind\":\"object\",\"type\":\"Round\",\"relationName\":\"RoundToRoundPlayerStats\"},{\"name\":\"matchParticipationId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"matchParticipation\",\"kind\":\"object\",\"type\":\"MatchParticipation\",\"relationName\":\"MatchParticipationToRoundPlayerStats\"},{\"name\":\"playerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"player\",\"kind\":\"object\",\"type\":\"Player\",\"relationName\":\"PlayerToRoundPlayerStats\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"kills\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"headshots\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bodyshots\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"legshots\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"grenadeCasts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ability1Casts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ability2Casts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ultimateCasts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"loadoutValue\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"creditsRemaining\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"weaponId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"weaponName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"armorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"armorName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"RoundTeamStats\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"roundId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"round\",\"kind\":\"object\",\"type\":\"Round\",\"relationName\":\"RoundToRoundTeamStats\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"RoundTeamStatsToTeam\"},{\"name\":\"teamSide\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"won\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null},\"Kill\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"matchId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"match\",\"kind\":\"object\",\"type\":\"Match\",\"relationName\":\"KillToMatch\"},{\"name\":\"roundNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"timeInRoundMs\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"timeInMatchMs\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"killerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"killer\",\"kind\":\"object\",\"type\":\"Player\",\"relationName\":\"Killer\"},{\"name\":\"victimId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"victim\",\"kind\":\"object\",\"type\":\"Player\",\"relationName\":\"Victim\"},{\"name\":\"assistants\",\"kind\":\"object\",\"type\":\"Player\",\"relationName\":\"Assistant\"},{\"name\":\"locationX\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"locationY\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"weaponId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"weaponName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"weaponType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"secondaryFireMode\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"TeamRoster\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"TeamToTeamRoster\"},{\"name\":\"playerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"player\",\"kind\":\"object\",\"type\":\"Player\",\"relationName\":\"PlayerToTeamRoster\"},{\"name\":\"seasonId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"season\",\"kind\":\"object\",\"type\":\"Season\",\"relationName\":\"SeasonToTeamRoster\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Substitution\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"matchId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"match\",\"kind\":\"object\",\"type\":\"Match\",\"relationName\":\"MatchToSubstitution\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"SubstitutionToTeam\"},{\"name\":\"substitutedInId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"substitutedIn\",\"kind\":\"object\",\"type\":\"Player\",\"relationName\":\"SubIn\"},{\"name\":\"substitutedOutId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"substitutedOut\",\"kind\":\"object\",\"type\":\"Player\",\"relationName\":\"SubOut\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

